plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

apply from: '../dependencies.gradle'

android {
    compileSdkVersion versions.compileSdk

    defaultConfig {
        applicationId "com.imagemaker.transbank"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.compileSdk
        versionCode versions.versionCode
        versionName versions.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation" : "$projectDir/schemas".toString()]
                arguments += ["dagger.hilt.disableModulesHaveInstallInCheck" : "true"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion versions.composeVersion
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    flavorDimensions += "version"
    productFlavors {
        create("develop") {
            // Assigns this product flavor to the "version" flavor dimension.
            // If you are using only one dimension, this property is optional,
            // and the plugin automatically assigns all the module's flavors to
            // that dimension.
            dimension = "version"
            applicationIdSuffix = ".dev"
            versionNameSuffix = "-dev"

            buildConfigField "String", "URL_RICK_AND_MORTY_API", "\"https://rickandmortyapi.com/api/\""
        }
        create("prod") {
            dimension = "version"
        }
    }
}

dependencies {

    // material
    implementation "com.google.android.material:material:$versions.materialVersion"

    // compose
    implementation "androidx.compose.ui:ui:$versions.composeVersion"
    implementation "androidx.activity:activity-compose:$versions.activityVersion"
    implementation "androidx.compose.material:material:$versions.composeVersion"
    implementation "androidx.compose.material:material-icons-extended:$versions.composeVersion"
    implementation "androidx.compose.foundation:foundation:$versions.composeVersion"
    implementation "androidx.compose.foundation:foundation-layout:$versions.composeVersion"
    implementation "androidx.compose.animation:animation:$versions.composeVersion"
    implementation "androidx.compose.runtime:runtime:$versions.composeVersion"
    implementation "androidx.compose.runtime:runtime-livedata:$versions.composeVersion"
    implementation "androidx.navigation:navigation-compose:$versions.composeNavVersion"
    implementation "androidx.compose.ui:ui-tooling:$versions.composeVersion"
    implementation "androidx.constraintlayout:constraintlayout-compose:$versions.constraintVersion"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$versions.composeVersion"

    // compose image loading
    implementation "com.github.skydoves:landscapist-coil:$versions.landscapistVersion"

    // architecture components
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycleVersion"
    implementation "androidx.room:room-ktx:$versions.roomVersion"
    kapt "androidx.room:room-compiler:$versions.roomVersion"
    testImplementation "androidx.arch.core:core-testing:$versions.archCompomentVersion"

    // hilt
    implementation "com.google.dagger:hilt-android:$versions.hiltVersion"
    implementation "androidx.hilt:hilt-navigation-compose:$versions.hiltComposeNavigation"
    kapt "com.google.dagger:hilt-compiler:$versions.hiltVersion"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$versions.hiltVersion"
    kaptAndroidTest "com.google.dagger:hilt-compiler:$versions.hiltVersion"

    // network
    implementation "com.github.skydoves:sandwich:$versions.sandwichVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttpVersion"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofitVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$versions.okhttpVersion"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutinesVersion"

    // logging
    implementation "com.jakewharton.timber:timber:$versions.timberVersion"
}